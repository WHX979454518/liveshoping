apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def config = rootProject.ext
android {
    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        multiDexEnabled true
        //Arouter 路由框架配置，用于在module之内、或不同module之间进行跳转
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "file_authorities", config.applicationId+".fileprovider"
            resValue "string", "app_name", config.appName
        }
        debug {
            resValue "string", "file_authorities", config.applicationId+".fileprovider"
            resValue "string", "app_name", config.appName
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api config.supportV4
    api config.supportAppcompatV7
    api config.supportRecyclerView
    api config.supportDesign
    api config.async_http
    api config.gson
    api config.glide
    api config.fresco
    api config.multidex
    api config.butterknife
    api config.recyclerViewAdapterHelper
    api config.eventbus
    api config.rxJava
    api config.rxAndroid
    api config.rxBinding
    api config.retrofit2
    api config.convertergson
    api 'com.journeyapps:zxing-android-embedded:3.3.0'
    api 'com.google.zxing:core:3.2.1'
//    api 'com.contrarywind:Android-PickerView:3.2.7'
    compile 'com.neovisionaries:nv-websocket-client:2.2'
    //路由框架 用于在module之内、或不同module之间进行跳转    若只有一个模块可以不采用此种方式
    api config.arouter
    annotationProcessor config.areoutetCompile
    annotationProcessor rootProject.ext.butterknifeCompiler
    api(name: 'emoji_library', ext: 'aar')
    api project(':imlibrary')
    api project(':pickerview')

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
